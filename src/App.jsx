import { useEffect, useState } from "react";

export default function App() {
  const [user, setUser] = useState(null);
  const [status, setStatus] = useState("loading");

  useEffect(() => {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram
    if (!window.Telegram?.WebApp) {
      setStatus("error:not_telegram");
      return;
    }

    const tg = window.Telegram.WebApp;
    tg.expand();

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!tg.initDataUnsafe?.user) {
      setStatus("error:no_data");
      return;
    }

    // 3. –í—Å—ë OK - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    setUser({
      id: tg.initDataUnsafe.user.id,
      name: [
        tg.initDataUnsafe.user.first_name,
        tg.initDataUnsafe.user.last_name,
      ]
        .filter(Boolean)
        .join(" "),
      username: tg.initDataUnsafe.user.username || "–Ω–µ—Ç",
      photo:
        tg.initDataUnsafe.user.photo_url || "https://via.placeholder.com/200",
    });
    setStatus("success");
  }, []);

  // –°—Ç–∞—Ç—É—Å—ã
  if (status === "error:not_telegram") {
    return (
      <div style={{ padding: 20 }}>
        <h1>üö´ –û—à–∏–±–∫–∞</h1>
        <p>–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞:</p>
        <a href="https://t.me/smartakwabot?startapp=webapp">@smartakwabot</a>
      </div>
    );
  }

  if (status === "error:no_data") {
    return (
      <div style={{ padding: 20 }}>
        <h1>üîê –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞</h1>
        <p>1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–º–µ–Ω –≤ @BotFather</p>
        <p>2. –û—Ç–∫—Ä–æ–π—Ç–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –≤ –±–æ—Ç–µ</p>
      </div>
    );
  }

  if (!user) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  return (
    <div style={{ padding: 20, textAlign: "center" }}>
      <img src={user.photo} width={100} style={{ borderRadius: "50%" }} />
      <h1>{user.name}</h1>
      <p>@{user.username}</p>
      <p>ID: {user.id}</p>
    </div>
  );
}
